plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-devtools'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	runtimeOnly 'mysql:mysql-connector-java:8.0.30'

	implementation 'org.springframework.boot:spring-boot-starter-validation'

	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compileOnly 'org.springframework.boot:spring-boot-starter-tomcat'

	//Tomcat Jasper 의존성 주입 (JSP 파일을 servlet 코드로 변환하여 컴파일 하고 실행하는데 사용)
	implementation 'org.apache.tomcat.embed:tomcat-embed-jasper'

	//JSTL 표준 태그 라이브러리 활성화를 위한 의존성 주입
	implementation 'jakarta.servlet:jakarta.servlet-api'
	implementation 'jakarta.servlet.jsp.jstl:jakarta.servlet.jsp.jstl-api'
	implementation 'org.glassfish.web:jakarta.servlet.jsp.jstl'

	//Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	//security
	implementation 'org.springframework.boot:spring-boot-starter-security'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.5'

	//QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//JSON 형태의 문자열 변환을 위한 Jackson 라이브러리
	implementation 'com.fasterxml.jackson.core:jackson-databind'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
}

configurations.all {
	resolutionStrategy {
		force 'io.jsonwebtoken:jjwt-api:0.12.5'
		force 'io.jsonwebtoken:jjwt-impl:0.12.5'
		force 'io.jsonwebtoken:jjwt-jackson:0.12.5'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}

// gradle clean 시에 QClass 디렉토리 삭제
clean {
	delete file('src/main/generated')
}

jar {
	enabled = false
}